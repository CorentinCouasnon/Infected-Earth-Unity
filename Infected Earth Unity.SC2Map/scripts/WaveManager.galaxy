// Condition pour spawn la prochaine vague : pas d'unités vivantes et moins de 10 vagues
bool Wave_SpawnCondition() {
    return (gv_unitsAlive == 0 && gv_currentWave < 10);
}

// Action appelée à chaque mort d'unité (décompte et vérifie fin de vague)
bool Wave_OnUnitDeath(bool testConds, bool runActions) {
    if (EventPlayer() != 15)
    {
        return true;
    }
    
    if (gv_unitsAlive > 0) 
    {
        gv_unitsAlive -= 1;
    }
    
    // Si fin de vague
    if (gv_unitsAlive == 0 && gv_currentWave > 0) {
        if (gv_currentWave == 10) {
            // Victoire pour le Joueur 1 !
            GameOver(1, c_gameOverVictory, true, true);
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringToText("Victoire ! Toutes les vagues sont vaincues !"));
        } else {
            // Message pour la prochaine vague
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringToText("Vague terminée ! Préparez-vous pour la suivante..."));
        }
    }

    return true;
}

// Action pour spawn une vague
bool Wave_SpawnAction(bool testConds, bool runActions) {
    int numUnits;
    int i;
    int j;
    unit newUnit;
    string u;
    int count;

    if (gv_currentWave >= 10) 
    {
        return false;
    }
    
    if (!Wave_SpawnCondition())
    {
        return false;
    }

    gv_currentWave += 1;
    numUnits = 0;
    UnitGroupClear(gv_enemiesGroup);

    for (i = 1; i <= 5; i += 1) {
        u = UserDataGetUnit("WaveTable", IntToString(gv_currentWave), "unit", i);
        count = UserDataGetInt("WaveTable", IntToString(gv_currentWave), "count", i);

        if (count == 0) {
            continue;
        }

        numUnits += count;

        for (j = 0; j < count; j += 1) {
            libNtve_gf_CreateUnitsWithDefaultFacing(1, u, 1, 15, RegionRandomPoint(Region_GetRandomSpawnRegion(c_Part_Terran)));
            newUnit = UnitLastCreated();
            UnitGroupAdd(gv_enemiesGroup, newUnit);
        }
    }

    gv_unitsAlive = numUnits;

    UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringToText("Vague " + IntToString(gv_currentWave) + " !"));

    return true;
}

// Fonction d'initialisation des vagues (à appeler dans Map_Init)
void Wave_Init() {
    gv_currentWave = 0;
    gv_unitsAlive = 0;
    gv_enemiesGroup = UnitGroupEmpty();
    
    TriggerAddEventTimePeriodic(TriggerCreate("Wave_SpawnAction"), 1, 1);
    TriggerAddEventUnitDied(TriggerCreate("Wave_OnUnitDeath"), null);
}