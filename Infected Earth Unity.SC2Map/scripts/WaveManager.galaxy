bool Wave_CanStart() 
{
    return gv_enemiesAlive == 0 && gv_currentWave < 10 && gv_enemySpawnCount == 0;
}

bool Wave_OnUnitDeath(bool testConds, bool runActions) {
    if (EventPlayer() != 15)
    {
        return true;
    }
    
    if (gv_enemiesAlive > 0) 
    {
        gv_enemiesAlive -= 1;
        UI_WaveInfo_Update();
    }
    
    // Si fin de vague
    if (gv_enemiesAlive == 0 && gv_currentWave > 0) {
        if (gv_currentWave == 10) {
            // Victoire pour le Joueur 1 !
            GameOver(1, c_gameOverVictory, true, true);
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringToText("Victoire ! Toutes les vagues sont vaincues !"));
        } else {
            // Message pour la prochaine vague
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, StringToText("Vague terminée ! Préparez-vous pour la suivante..."));
        }
    }

    return true;
}

bool Wave_TryNew(bool testConds, bool runActions) {
    int i;
    int j;
    unit newUnit;
    string u;
    int count;

    if (gv_currentWave >= 10) 
    {
        return false;
    }
    
    if (!Wave_CanStart())
    {
        return false;
    }

    gv_currentWave += 1;
    UI_WaveInfo_Update();
    UnitGroupClear(gv_enemiesGroup);

    for (i = 1; i <= 5; i += 1) {
        u = UserDataGetUnit("WaveTable", IntToString(gv_currentWave), "unit", i);
        count = UserDataGetInt("WaveTable", IntToString(gv_currentWave), "count", i);

        if (count == 0) {
            continue;
        }

        for (j = 0; j < count; j += 1) {
            gv_enemySpawnQueue[gv_enemySpawnCount] = u;
            gv_enemySpawnCount += 1;
        }
    }

    return true;
}

// TODO : Peut etre passer en FIFO si possibilité de spawner plusieurs vagues en meme temps
bool Wave_SpawnTick(bool testConds, bool runActions) 
{
    unit newUnit;

    if (gv_enemySpawnCount < 1)
    {
        return true;
    }

    if (gv_enemiesAlive >= c_maximumEnemyCount)
    {
        return true;
    }

    gv_enemySpawnCount -= 1;

    libNtve_gf_CreateUnitsWithDefaultFacing(1, gv_enemySpawnQueue[gv_enemySpawnCount], 1, 15, RegionRandomPoint(Region_GetRandomSpawnRegion(c_Part_Terran)));
    newUnit = UnitLastCreated();
    UnitGroupAdd(gv_enemiesGroup, newUnit);

    gv_enemiesAlive += 1;
    UI_WaveInfo_Update();

    return true;
}

void Wave_Init() 
{
    gv_currentWave = 0;
    gv_enemiesAlive = 0;
    gv_enemiesGroup = UnitGroupEmpty();
    
    TriggerAddEventTimePeriodic(TriggerCreate("Wave_TryNew"), 1, c_timeGame);
    TriggerAddEventTimePeriodic(TriggerCreate("Wave_SpawnTick"), c_minimumTickTime, c_timeGame);
    TriggerAddEventUnitDied(TriggerCreate("Wave_OnUnitDeath"), null);
}